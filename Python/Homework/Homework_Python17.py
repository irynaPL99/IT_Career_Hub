'''Task 1. Проверка на подмножество
Напишите программу, которая проверяет, содержит ли первое множество
все элементы второго множества. Реализуйте решение несколькими способами.
Решите одним из способов не используя возможности множеств.
Данные:
set1 = {1, 2, 3, 4}
set2 = {2, 3}
Пример вывода:
True
'''
print("\n<<<<< Task 1.1 Проверка на подмножество  >>>>>")
set1 = {1, 2, 3, 4}
set2 = {2, 3}
print(set1 > set2) # > или issuperset().Надмножество	{1,2,3} > {1,2} → True

print("\n<<<<< Task 1.2 Проверка на подмножество  >>>>>")
set1 = {1, 2, 3, 4}
set2 = {2, 3}
print(set1 >= set2) # >=	Надмножество или равно	{1,2} >= {1,2} → True

print("\n<<<<< Task 1.3 Проверка на подмножество  >>>>>")
set1 = {1, 2, 3, 4}
set2 = {2, 3}
print(set1.issuperset(set2))  # Надмножество

print("\n<<<<< Task 1.4 Проверка на подмножество  >>>>>")
set1 = {1, 2, 3, 4}
set2 = {2, 3}
print(set2.issubset(set1))   # < или issubset()	Подмножество	{1,2} < {1,2,3} → True

print("\n<<<<< Task 1.5 Проверка на подмножество  >>>>>")
set1 = {1, 2, 3, 4}
set2 = {2, 3}
print(set2 < set1) # Подмножество

print("\n<<<<< Task 1.6 Проверка на подмножество  >>>>>")
set1 = {1, 2, 3, 4}
set2 = {2, 3}
list1 =  list(set1)
list2 =  list(set2)
#print(list1)
flag = True
for item in list2:
    if item not in list1:
        flag = False
print(flag)


'''Task 2. Зеркальное подмножество
Напишите программу, которая проверяет, являются ли элементы одного из множеств 
подмножеством другого. В случае положительного ответа возвращает 
разницу между двумя множествами. Проверить необходимо в обе стороны.
Данные:
set1 = {2, 3, 4, 5, 6}
set2 = {4, 5}
Пример вывода:
Подмножество: True
Разница: {2, 3, 6}
'''
print("\n<<<<< Task 2.1 Зеркальное подмножество  >>>>>")
set1 = {2, 3, 4, 5, 6}
set2 = {4, 5}
#if set2 < set1 or set1 < set2:
#    flag = True
print(f"Подмножество: {set2 < set1 or set1 < set2}") # Подмножество
if set2 < set1:
    print(f"Разница: {set1 - set2}")
if set1 < set2:
    print(f"Разница: {set2 - set1}")